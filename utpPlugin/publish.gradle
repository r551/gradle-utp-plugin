//def getDefaultGroupId(p) {
//    def segments = []
//
//    for (; p; p = p.parent) {
//        segments.push(p.name)
//    }
//
//    return segments.reverse().join('.')
//}
//
//apply plugin: 'maven'
//
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            pom.project {
//                groupId project.GROUP_ID
//                artifactId project.ARTIFACT_ID
//                version project.VERSION
//            }
//
//            def parentGroupId = getDefaultGroupId(project.parent)
//
//            pom.withXml {
//                it.asNode().dependencies.dependency.findAll { it.groupId.text() == parentGroupId }.each {
//                    def p = project.parent.childProjects[it.artifactId.text()]
//
//                    it.groupId.each {
//                        it.value = p.GROUP_ID
//                    }
//                    it.artifactId.each{
//                        it.value = p.ARTIFACT_ID
//                    }
//                    it.version.each {
//                        it.value = project.VERSION
//                    }
//                }
//            }
//
//            repository(url: project.RELEASE_REPOSITORY_URL) {
//                authentication(userName: project.USERNAME, password: project.PASSWORD)
//            }
//
//            snapshotRepository(url: project.SNAPSHOT_REPOSITORY_URL) {
//                authentication(userName: project.USERNAME, password: project.PASSWORD)
//            }
//        }
//    }
//}


apply plugin: 'maven'

uploadArchives {
    repositories {
        mavenDeployer {
            pom.project {
                groupId project.GROUP_ID
                artifactId project.ARTIFACT_ID
                version project.VERSION
            }

            def parentProjectName = project.getParent().getName();

            pom.withXml {
                def node = it.asElement()
                def nodeList = node.getElementsByTagName('dependency')
                for (int i = 0; i < nodeList.length; i++) {
                    def dependencyItem = nodeList.item(i)

                    def child = dependencyItem.firstChild
                    while (child) {
                        if (child.nodeName == "groupId") {
                            if (child.textContent == parentProjectName) {
                                child.setTextContent(project.GROUP_ID)
                            }
                        }
                        if (child.nodeName == "version") {
                            if (child.textContent == "unspecified") {
                                child.setTextContent(project.VERSION)
                            }
                        }
                        child = child.nextSibling
                    }
                }
            }

            repository(url: project.RELEASE_REPOSITORY_URL) {
                authentication(userName: project.USERNAME, password: project.PASSWORD)
            }
            snapshotRepository(url: project.SNAPSHOT_REPOSITORY_URL) {
                authentication(userName: project.USERNAME, password: project.PASSWORD)
            }
        }
    }
}
